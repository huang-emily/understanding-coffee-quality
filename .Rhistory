knitr::opts_chunk$set(echo = TRUE)
# install.packages("tidytuesdayR")
# install.packages("corrplot")
library(corrplot)
library(tidyverse)
library(patchwork)
library(stargazer)
library(sandwich)
library(lmtest)
library(dplyr)
library(ggplot2)
library(car)
# Get the Data
# Read in with tidytuesdayR package
# Install from CRAN via: install.packages("tidytuesdayR")
# This loads the readme and all the datasets for the week of interest
# Either ISO-8601 date or year/week works!
# tuesdata <- tidytuesdayR::tt_load('2020-07-07')
# tuesdata <- tidytuesdayR::tt_load(2020, week = 28)
#
# coffee_ratings <- tuesdata$filtered_data
# coffee_ratings
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')
#  Get rid of 1 row which has a total_cup_points of 0.  This is an error.
#  The next lowest total_cup_points is 59.83.
coffee_ratings <- coffee_ratings[coffee_ratings$total_cup_points != 0,]
#  Clean the harvest_year
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "08/09 crop"] <- "2009"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "1t/2011"] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "1T/2011"] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2009 - 2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2009 / 2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2009/2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2009-2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2010-2011"] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2011/2012"] <- "2012"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2013/2014"] <- "2014"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2014/2015"] <- "2015"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2015/2016"] <- "2016"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2016 / 2017"] <- "2017"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2016/2017"] <- "2017"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "2017 / 2018"] <- "2018"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "3T/2011"] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "47/2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "4T/10"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "4T/2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "4t/2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "4t/2011"] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "4T72010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "Abril - Julio"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "Abril - Julio /2011"] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "August to December"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "December 2009-March 2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "Fall 2009"] <- "2009"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "January Through April"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "May-August"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "Mayo a Julio"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "mmm"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "Sept 2009 - April 2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "Spring 2011 in Colombia."] <- "2011"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "TEST"] <- NA
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "March 2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "23 July 2010"] <- "2010"
coffee_ratings["harvest_year"][coffee_ratings["harvest_year"] == "January 2011"] <- "2011"
coffee_ratings["certification_body"][coffee_ratings["certification_body"] == "Specialty Coffee Association of Costa Rica"] <- "Specialty Coffee Association"
coffee_ratings["certification_body"][coffee_ratings["certification_body"] == "Specialty Coffee Association of Indonesia"] <- "Specialty Coffee Association"
#  Created havest_year_num which is numeric
coffee_ratings$harvest_year_num <- as.numeric(as.character(coffee_ratings$harvest_year))
#  Removes new line character in Certification Body
coffee_ratings$certification_body <- sapply(coffee_ratings$certification_body,
function(x) { gsub("[\r\n]", "", x) })
filtered_coffee = coffee_ratings[coffee_ratings$species == 'Arabica',]
filtered_countries = filtered_coffee[!(filtered_coffee$country_of_origin %in% c('Cote d?Ivoire', 'United States (Puerto Rico)', 'United States (Hawaii)', 'United States')),]
filtered_numbags = filtered_countries[filtered_countries$number_of_bags >= 10.00,]
filtered_alt = filtered_numbags[filtered_numbags$altitude_mean_meters <=10000,]
filtered_data <- filtered_alt %>%
filter(!is.na(filtered_alt$harvest_year) & !is.na(filtered_alt$grading_date) & !is.na(filtered_alt$altitude_mean_meters) & !is.na(filtered_alt$certification_body) & !is.na(filtered_alt$country_of_origin) & !is.na(filtered_alt$processing_method))
filtered_data$certification_body <- sapply(filtered_data$certification_body,function(x) { gsub("[\r\n]", "", x) })
filtered_data <- filtered_data[filtered_data$total_cup_points>=70,]
# version that we're going with
first = lm(total_cup_points ~ flavor, data = filtered_data)
second = lm(total_cup_points ~ flavor +
country_of_origin + #control
certification_body + #control
altitude_mean_meters, #control
data = filtered_data)
third = lm(total_cup_points ~ flavor +
country_of_origin + #control
certification_body + #control
altitude_mean_meters + #control
harvest_year + #interaction
processing_method + #interaction
aroma + #interaction
acidity + #interaction
body + #interaction
balance + #interaction
sweetness +
aftertaste, #interaction
data = filtered_data)
# insert accounting table
cause <- c('Start', 'Arabica species coffee', 'Coffees with relevant countries of origin for Starbucks', 'Coffees with sample bags >= 10','Coffee with reasonable altitude mean meters', 'Coffees with valid values for our outcome, treatment, and predictor variables','Coffee with greater than 70 “total cup points”')
samples_available <- c('1339', '1311', '1225', '1079', '1075','886','879')
samples_filtered <- c('', '28', '86', '146', '4', '189', '7')
act_table <- data.frame(cause, samples_available, samples_filtered)
knitr::kable(act_table,
col.names = c("Cause",
"Number of samples available for analysis (after removal for cause)",
"Remove number of samples for cause"))
par(mar=c(1,3,5,4))
par(oma=c(1,1,1,1))
par(mfrow = c(1,3))
hist(filtered_data$total_cup_points, main="Total Cup Points")
hist(filtered_data$flavor, main="Flavor")
hist(filtered_data$altitude_mean_meters, main="Altitude Mean Meters")
num_vars = filtered_data[c("total_cup_points", "flavor", "aroma", "acidity",
"body", "balance", "sweetness", "aftertaste")]
third.cor = cor(num_vars, method = c("spearman"))
corrplot(third.cor, method = 'number', tl.col = 'black', number.cex=0.75)
# waldtest(first, second, third)
anova(first, second, test = "F")
anova(second, third, test = "F")
calculate_msr <- function(model) {
# This function takes a model, and uses the `resid` function
# together with the definition of the msr to produce
# the MEAN of the squared residuals
msr <- mean(resid(model)^2)
return(msr)
}
model_1_msr <- calculate_msr(first)
model_2_msr <- calculate_msr(second)
model_3_msr <- calculate_msr(third)
print(paste("Model 1 MSR:", model_1_msr))
print(paste("Model 2 MSR:", model_2_msr))
print(paste("Model 3 MSR:", model_3_msr))
stargazer(
first,
second,
third,
omit = c('certification_body.', 'country_of_origin.', 'altitude_mean_meters', 'processing_method.', 'harvest_year.'),
column.labels = c('first', 'second', 'third'),
type = 'text',
header = FALSE,
report = 'vsc*',
star.cutoffs = c(0.05, 0.01, 0.001)
)
plot(first, which = 1, main = 'Model 1')
plot(second, which = 1, main = 'Model 2')
plot(third, which = 1, main = 'Model 3')
plot(first, which = 3, main = 'Model 1')
plot(second, which = 3,  main = 'Model 2')
plot(third, which = 3,  main = 'Model 3')
plot(first, which = 2,  main = 'Model 1')
plot(second, which = 2,  main = 'Model 2')
plot(third, which = 2,  main = 'Model 3')
